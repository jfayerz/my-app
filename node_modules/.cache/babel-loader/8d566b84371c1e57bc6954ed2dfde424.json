{"ast":null,"code":"var _jsxFileName = \"/work/TTS/JavaScript Dec19/my-app/src/components/Note.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/Note.css';\nconst GENERIC_NOTE_TITLE = \"New Note Title\",\n      GENERIC_NOTE_BODY = \"New Note Body\";\n\nclass Note extends Component {\n  // eslint-disable-next-line\n  constructor() {\n    super();\n  }\n\n  componentWillMount() {\n    this.state = {\n      title: this.props.title,\n      body: this.props.body,\n      editMode: false\n    };\n  }\n\n  handleEdit() {\n    this.setState({\n      editMode: true\n    });\n  }\n\n  handleSave() {\n    this.setState({\n      title: this.refs.titleContent.value,\n      body: this.refs.bodyContent.value,\n      editMode: false\n    });\n  }\n\n  render() {\n    let titleElement, bodyElement, buttonArea;\n\n    if (this.state.editMode) {\n      titleElement = React.createElement(\"textarea\", {\n        ref: \"titleContent\",\n        className: \"title-textarea\",\n        defaultValue: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n      bodyElement = React.createElement(\"textarea\", {\n        ref: \"bodyContent\",\n        className: \"body-textarea\",\n        defaultValue: this.state.body,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n      buttonArea = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.handleSave.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Save\"));\n    } else {\n      titleElement = React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.title);\n      bodyElement = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.state.body);\n      buttonArea = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        onClick: this.handleEdit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, titleElement, bodyElement, buttonArea)));\n  }\n\n}\n\nNote.defaultProps = {\n  title: \"A cool title\",\n  body: \"A cool body\"\n};\nNote.propTypes = {\n  title: PropTypes.string\n};\nexport default Note;","map":{"version":3,"sources":["/work/TTS/JavaScript Dec19/my-app/src/components/Note.js"],"names":["React","Component","PropTypes","GENERIC_NOTE_TITLE","GENERIC_NOTE_BODY","Note","constructor","componentWillMount","state","title","props","body","editMode","handleEdit","setState","handleSave","refs","titleContent","value","bodyContent","render","titleElement","bodyElement","buttonArea","bind","defaultProps","propTypes","string"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/Note.css';\n\nconst GENERIC_NOTE_TITLE = \"New Note Title\", GENERIC_NOTE_BODY = \"New Note Body\";\n\nclass Note extends Component {\n// eslint-disable-next-line\n  constructor() {\n    super();\n  }\n\n  componentWillMount(){\n\tthis.state = {\n\t\ttitle: this.props.title,\n\t\tbody: this.props.body,\n\t\teditMode: false\n\t\t};\n\n\t}\n  handleEdit() {\n\tthis.setState({\n\t\teditMode: true\n\t\t});\n\t}\n\n  handleSave() {\n\tthis.setState({\n\t\ttitle: this.refs.titleContent.value,\n\t\tbody: this.refs.bodyContent.value,\n\t\teditMode: false\n\t\t});\n\t}\n\n  render() {\n    let titleElement, bodyElement,buttonArea;\n    if (this.state.editMode) {\n      titleElement = <textarea ref=\"titleContent\" className=\"title-textarea\" defaultValue={this.state.title}></textarea>;\n\t        bodyElement = <textarea ref=\"bodyContent\" className=\"body-textarea\" defaultValue={this.state.body}></textarea>;\n\t\t\t      buttonArea = <div><button className=\"btn btn-primary\" onClick={this.handleSave.bind(this)}>Save</button></div>;\n\t\t\t\t      } else {\n\t\t\t\t\t        titleElement = <h5>{this.state.title}</h5>;\n\t\t\t\t\t\t\t      bodyElement = <p>{this.state.body}</p>;\n\t\t\t\t\t\t\t\t        buttonArea = <div><button className=\"btn btn-info\" onClick={this.handleEdit.bind(this)}>Edit</button><button className=\"btn btn-danger\">Delete</button></div>;\n\t\t\t }\n\n    return (\n      <div className=\"col-sm-6\">\n        <div className=\"card card-view\">\n          <div className=\"card-body\">\n\t\t\t\t              {titleElement}\n\t\t\t\t              {bodyElement}\n\t\t\t\t              {buttonArea}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nNote.defaultProps = {\n\ttitle: \"A cool title\",\n\tbody: \"A cool body\",\n};\n\nNote.propTypes = {\n\ttitle: PropTypes.string\n};\n\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}